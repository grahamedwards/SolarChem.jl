
function LoddersFegley1998()
    els = [:H, :Li, :Be, :B, :C, :N, :O, :F, :Na, :Mg, :Al, :Si, :P, :S, :Cl, :K, :Ca, :Sc, :Ti, :V, :Cr, :Mn, :Fe, :Co, :Ni, :Cu, :Zn, :Ga, :Ge, :As, :Se, :Br, :Rb, :Sr, :Y, :Zr, :Nb, :Mo, :Ru, :Rh, :Pd, :Ag, :Cd, :In, :Sn, :Sb, :Te, :I, :Cs, :Ba, :La, :Ce, :Pr, :Nd, :Sm, :Eu, :Gd, :Tb, :Dy, :Ho, :Er, :Tm, :Yb, :Lu, :Hf, :Ta, :W, :Re, :Os, :Ir, :Pt, :Au, :Hg, :Tl, :Pb, :Bi, :Th, :U]

    z = (; zip(els, [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 92])...)

    Tc = (; zip(els,[NaN,1142, 1452, 908, 40, 123, 180, 734, 958, 1336, 1653, 1310, 1229, 664, 948, 1006, 1517, 1659, 1582, 1429, 1296, 1158, 1334, 1352, 1353, 1037, 726, 968, 883, 1065, 697, 546, 800, 1464, 1659, 1741, 1559, 1590, 1551, 1392, 1324, 996, 652, 536, 704, 979, 709, 535, 799, 1455, 1578, 1478, 1582, 1602, 1590, 1356, 1659, 1659, 1659, 1659, 1659, 1659, 1487, 1659, 1684, 1573, 1789, 1821, 1812, 1603, 1408, 1060, 252, 532, 727, 746, 1659, 1610])...)


    CI = (;zip(els,[0.0202, 1.5e-6, 2.5e-8, 8.7e-7, 0.0345, 0.00318, 0.464, 6.0e-5, 0.005, 0.097, 0.00865, 0.106, 0.00095, 0.0541, 0.0007, 0.00055, 0.00926, 5.9e-6, 0.00044, 5.5e-5, 0.00265, 0.00194, 0.182, 0.000505, 0.011, 0.000125, 0.000315, 9.8e-6, 3.3e-5, 1.85e-6, 2.1e-5, 3.5e-6, 2.3e-6, 7.3e-6, 1.56e-6, 3.9e-6, 2.5e-7, 9.2e-7, 7.1e-7, 1.4e-7, 5.6e-7, 2.0e-7, 6.9e-7, 8.0e-8, 1.7e-6, 1.35e-7, 2.3e-6, 4.3e-7, 1.9e-7, 2.35e-6, 2.35e-7, 6.2e-7, 9.4e-8, 4.6e-7, 1.5e-7, 5.7e-8, 2.0e-7, 3.7e-8, 2.5e-7, 5.6e-8, 1.6e-7, 2.5e-8, 1.6e-7, 2.5e-8, 1.05e-7, 1.4e-8, 9.3e-8, 3.8e-8, 4.9e-7, 4.65e-7, 1.0e-6, 1.45e-7, 3.1e-7, 1.42e-7, 2.5e-6, 1.1e-7, 2.9e-8, 8.0e-9])...)
    

    CM = (;zip(els,[0.014, 1.5e-6, 4.0e-8, 4.8e-7, 0.022, 0.00152, 0.432, 3.8e-5, 0.0039, 0.115, 0.0113, 0.127, 0.00103, 0.027, 0.00043, 0.00037, 0.0129, 8.2e-6, 0.00055, 7.5e-5, 0.00305, 0.00165, 0.213, 0.00056, 0.0123, 0.00013, 0.00018, 7.6e-6, 2.6e-5, 1.8e-6, 1.2e-5, 3.0e-6, 1.6e-6, 1.0e-5, 2.0e-6, 7.0e-6, 4.0e-7, 1.4e-6, 8.7e-7, 1.6e-7, 6.3e-7, 1.6e-7, 4.2e-7, 5.0e-8, 7.9e-7, 1.3e-7, 1.3e-6, 2.7e-7, 1.1e-7, 3.1e-6, 3.2e-7, 9.4e-7, 1.37e-7, 6.26e-7, 2.04e-7, 7.8e-8, 2.9e-7, 5.1e-8, 3.32e-7, 7.7e-8, 2.21e-7, 3.5e-8, 2.15e-7, 3.3e-8, 1.8e-7, 1.9e-8, 1.6e-7, 5.0e-8, 6.7e-7, 5.8e-7, 1.1e-6, 1.5e-7, NaN, 9.2e-8, 1.6e-6, 7.1e-8, 4.1e-8, 1.2e-8])...)

    CV = (;zip(els,[0.0028, 1.7e-6, 5.0e-8, 3.0e-7, 0.0053, 8.0e-5, 0.37, 2.4e-5, 0.0034, 0.143, 0.0168, 0.157, 0.00112, 0.022, 0.00025, 0.00036, 0.0184, 1.02e-5, 0.00087, 9.7e-5, 0.00348, 0.00152, 0.235, 0.00064, 0.0132, 0.000104, 0.00011, 6.1e-6, 1.6e-5, 1.5e-6, 8.7e-6, 1.6e-6, 1.2e-6, 1.48e-5, 2.6e-6, 8.9e-6, 5.0e-7, 1.8e-6, 1.2e-6, 1.7e-7, 7.1e-7, 1.0e-7, 3.5e-7, 3.2e-8, 6.8e-7, 8.5e-8, 1.0e-6, 1.6e-7, 9.0e-8, 4.55e-6, 4.69e-7, 1.19e-6, 1.74e-7, 9.19e-7, 2.94e-7, 1.05e-7, 4.05e-7, 7.1e-8, 4.54e-7, 9.7e-8, 2.77e-7, 4.8e-8, 3.12e-7, 4.6e-8, 2.3e-7, NaN, 1.6e-7, 5.7e-8, 8.0e-7, 7.3e-7, 1.25e-6, 1.53e-7, NaN, 5.8e-8, 1.1e-6, 5.4e-8, 5.8e-8, 1.7e-8])...)

    CO = (;zip(els,[0.0007, 1.8e-6, NaN, NaN, 0.0044, 9.0e-5, 0.37, 3.0e-5, 0.0042, 0.145, 0.014, 0.158, 0.00121, 0.022, 0.00028, 0.00036, 0.0158, 9.5e-6, 0.00073, 9.5e-5, 0.00352, 0.00162, 0.25, 0.00068, 0.0142, 0.00013, 0.00011, 7.1e-6, 2.0e-5, 2.0e-6, 8.0e-6, 1.4e-6, 1.3e-6, 1.3e-5, 2.4e-6, 9.0e-6, NaN, 1.7e-6, 1.08e-6, NaN, 7.1e-7, 1.0e-7, 8.0e-9, 2.5e-8, 8.9e-7, 1.1e-7, 9.5e-7, 2.0e-7, 8.0e-8, 4.3e-6, 3.8e-7, 1.14e-6, 1.4e-7, 8.5e-7, 2.5e-7, 9.6e-8, 3.9e-7, 6.0e-8, 4.2e-7, 9.6e-8, 3.05e-7, 4.0e-8, 2.7e-7, 3.9e-8, 2.2e-7, NaN, 1.5e-7, 5.8e-8, 8.05e-7, 7.4e-7, 1.24e-6, 1.9e-7, NaN, 4.0e-8, 2.15e-6, 3.5e-8, 8.0e-8, 1.8e-8])...)

    CK = (;zip(els,[NaN, 1.4e-6, NaN, NaN, 0.0022, NaN, NaN, 2.0e-5, 0.0031, 0.147, 0.0147, 0.158, 0.0011, 0.017, 0.00026, 0.00029, 0.017, 1.1e-5, 0.00094, 9.6e-5, 0.00353, 0.00144, 0.23, 0.00062, 0.0131, 9.0e-5, 8.0e-5, 5.2e-6, 1.4e-5, 1.4e-6, 8.0e-6, 6.0e-7, NaN, 1.5e-5, 2.7e-6, 8.0e-6, 4.0e-7, 3.8e-7, 1.1e-6, 1.8e-7, 5.8e-7, NaN, NaN, NaN, 4.9e-7, 6.0e-8, 8.0e-7, 2.0e-7, NaN, 4.7e-6, 4.6e-7, 1.27e-6, NaN, 9.9e-7, 2.9e-7, 1.1e-7, 4.4e-7, NaN, 4.9e-7, 1.0e-7, 3.5e-7, NaN, 3.2e-7, 4.6e-8, 2.5e-7, NaN, 1.8e-7, 6.0e-8, 8.15e-7, 7.6e-7, 1.3e-6, 1.2e-7, NaN, NaN, 8.0e-7, 2.0e-8, 5.8e-8, 1.5e-8])...)

    CR = (;zip(els,[NaN, NaN, NaN, NaN, 0.02, 0.00062, NaN, NaN, 0.0033, 0.137, 0.0115, 0.15, 0.00103, 0.019, NaN, 0.000315, 0.0129, 7.8e-6, 0.00054, 7.4e-5, 0.00342, 0.00166, 0.238, 0.00064, 0.0131, 0.0001, 0.0001, 6.0e-6, 1.8e-5, 1.5e-6, 8.2e-6, 1.0e-6, 1.1e-6, 1.0e-5, NaN, 5.4e-6, 5.0e-7, 1.4e-6, 9.7e-7, NaN, 6.9e-7, 9.5e-8, 3.0e-7, 3.0e-8, 7.3e-7, 8.0e-8, 1.0e-6, NaN, 8.4e-8, 3.4e-6, 3.1e-7, 7.5e-7, NaN, 7.9e-7, 2.3e-7, 8.0e-8, 3.2e-7, 5.0e-8, 2.8e-7, 1.0e-7, NaN, NaN, 2.2e-7, 3.2e-8, 1.5e-7, NaN, 1.1e-7, 5.0e-8, 7.1e-7, 6.7e-7, 9.8e-7, 1.6e-7, NaN, 6.0e-8, NaN, 4.0e-8, 4.2e-8, 1.3e-8])...)

    H = (;zip(els,[NaN, 1.7e-6, 3.0e-8, 4.0e-7, 0.0021, 4.8e-5, 0.357, 0.000125, 0.00611, 0.141, 0.0106, 0.171, 0.0012, 0.02, 0.00014, 0.00078, 0.0122, 7.8e-6, 0.00063, 7.3e-5, 0.0035, 0.00234, 0.272, 0.00083, 0.0171, 9.4e-5, 4.7e-5, 6.0e-6, 1.0e-5, 2.2e-6, 8.0e-6, NaN, 2.3e-6, 8.8e-6, 2.0e-6, 7.3e-6, 4.0e-7, 1.4e-6, 1.1e-6, 2.1e-7, 8.45e-7, 4.5e-8, 4.38e-5, NaN, 3.5e-7, 6.6e-8, 5.2e-7, 6.0e-8, NaN, 4.4e-6, 3.01e-7, 7.63e-7, 1.2e-7, 5.81e-7, 1.94e-7, 7.4e-8, 2.75e-7, 4.9e-8, 3.05e-7, 7.4e-8, 2.13e-7, 3.3e-8, 2.03e-7, 3.3e-8, 1.5e-7, 2.1e-8, 1.64e-7, 7.8e-8, 8.35e-7, 7.7e-7, 1.58e-6, 2.2e-7, NaN, NaN, 2.4e-7, NaN, 3.8e-8, 1.3e-8])...)

    L = (;zip(els,[NaN, 1.85e-6, 4.0e-8, 4.0e-7, 0.0025, 4.3e-5, 0.377, 0.0001, 0.0069, 0.149, 0.0116, 0.186, 0.00103, 0.022, 0.00027, 0.00092, 0.0133, 8.1e-6, 0.00067, 7.5e-5, 0.00369, 0.00259, 0.218, 0.00058, 0.0124, 9.0e-5, 5.7e-5, 5.4e-6, 1.0e-5, 1.36e-6, 8.5e-6, NaN, 2.8e-6, 1.1e-5, 1.8e-6, 6.4e-6, 4.0e-7, 1.2e-6, 7.5e-7, 1.55e-7, 6.2e-7, 5.0e-8, 3.0e-8, NaN, 5.4e-7, 7.8e-8, 4.6e-7, 7.0e-8, NaN, 4.1e-6, 3.18e-7, 9.7e-7, 1.4e-7, 7.0e-7, 2.03e-7, 8.0e-8, 3.17e-7, 5.9e-8, 3.72e-7, 8.9e-8, 2.52e-7, 3.8e-8, 2.26e-7, 3.4e-8, 1.7e-7, 2.1e-8, 1.38e-7, 4.7e-8, 5.3e-7, 4.9e-7, 1.09e-6, 1.56e-7, 3.0e-8, NaN, 4.0e-8, 1.4e-8, 4.2e-8, 1.5e-8])...)

    LL = (;zip(els,[NaN, 1.8e-6, 4.5e-8, 7.0e-7, 0.0031, 7.0e-5, 0.4, 7.0e-5, 0.00684, 0.153, 0.0118, 0.189, 0.00091, 0.021, 0.0002, 0.00088, 0.0132, 8.0e-6, 0.00068, 7.6e-5, 0.00368, 0.0026, 0.198, 0.00048, 0.0106, 8.5e-5, 5.6e-5, 5.3e-6, 1.0e-5, 1.3e-6, 9.0e-6, 1.0e-6, 2.2e-6, 1.3e-5, 2.0e-6, 7.4e-6, NaN, 1.1e-6, NaN, NaN, 5.6e-7, 7.5e-8, 4.0e-8, 4.39e-5, NaN, 7.5e-8, 3.8e-7, NaN, 1.5e-7, 4.0e-6, 3.3e-7, 8.8e-7, 1.3e-7, 6.5e-7, 2.05e-7, 7.8e-8, 2.9e-7, 5.4e-8, 3.6e-7, 8.2e-8, 2.4e-7, 3.5e-8, 2.3e-7, 3.4e-8, 1.7e-7, NaN, 1.15e-7, 3.2e-8, 4.1e-7, 3.8e-7, 8.8e-7, 1.46e-7, 2.2e-8, 4.39e-5, NaN, 4.4e-5, 4.7e-8, 1.5e-8])...)

    R = (;zip(els,[NaN, NaN, NaN, NaN, 0.00058, NaN, NaN, NaN, 0.00663, 0.129, 0.0106, 0.18, NaN, 0.0407, NaN, 0.00078, 0.00914, 7.75e-6, 0.0009, 7.0e-5, 0.00364, 0.00296, 0.244, 0.00061, 0.0144, NaN, 0.00015, 8.1e-6, NaN, 1.9e-6, 1.41e-5, 5.5e-7, NaN, NaN, NaN, NaN, NaN, 9.0e-7, 9.6e-7, NaN, NaN, NaN, NaN, NaN, NaN, 7.2e-8, NaN, NaN, NaN, NaN, 3.1e-7, 8.3e-7, NaN, NaN, 1.8e-7, 7.2e-8, NaN, NaN, 2.9e-8, 5.9e-8, NaN, NaN, 2.16e-7, 3.2e-8, 1.5e-7, NaN, NaN, 4.3e-8, 6.9e-7, 6.1e-7, NaN, 1.83e-7, NaN, NaN, NaN, NaN, NaN, NaN])...)

    EH = (;zip(els,[NaN, 1.9e-6, 2.1e-8, 1.0e-6, 0.0039, 0.00042, 0.28, 0.000155, 0.00688, 0.107, 0.0082, 0.166, 0.00213, 0.056, 0.00057, 0.00084, 0.0085, 6.1e-6, 0.00046, 5.6e-5, 0.0033, 0.00212, 0.305, 0.00087, 0.0184, 0.000215, 0.00029, 1.67e-5, 3.8e-5, 3.5e-6, 2.5e-5, 2.7e-6, 3.1e-6, 7.0e-6, 1.2e-6, 6.6e-6, NaN, NaN, 9.3e-7, NaN, 8.2e-7, 2.8e-7, 7.05e-7, 8.5e-8, 1.36e-6, 1.9e-7, 2.4e-6, 2.1e-7, 2.1e-7, 2.4e-6, 2.4e-7, 6.5e-7, 1.0e-7, 4.4e-7, 1.4e-7, 5.2e-8, 2.1e-7, 3.4e-8, 2.3e-7, 5.0e-8, 1.6e-7, 2.4e-8, 1.54e-7, 2.5e-8, 1.4e-7, NaN, 1.4e-7, 5.5e-8, 6.6e-7, 5.7e-7, 1.29e-6, 3.3e-7, 6.0e-8, 1.0e-7, 1.5e-6, 9.0e-8, 3.0e-8, 9.2e-9])...)

    EL = (;zip(els,[NaN, 7.0e-7, NaN, NaN, 0.0043, 0.00024, 0.31, 0.00014, 0.00577, 0.138, 0.01, 0.188, 0.00125, 0.031, 0.00023, 0.0007, 0.0102, 7.7e-6, 0.00055, 6.4e-5, 0.00303, 0.00158, 0.248, 0.00072, 0.0147, 0.00012, 1.8e-5, 1.1e-5, 3.0e-5, 2.2e-6, 1.5e-5, 8.0e-7, 2.3e-6, 9.4e-6, NaN, 7.2e-6, NaN, NaN, 7.7e-7, NaN, 7.3e-7, 8.5e-8, 3.5e-8, 4.0e-9, NaN, 9.0e-8, 9.3e-7, 8.0e-8, 1.25e-7, 2.8e-6, 1.96e-7, 5.8e-7, 7.0e-8, 3.7e-7, 1.49e-7, 5.4e-8, 1.96e-7, 3.2e-8, 2.45e-7, 5.1e-8, 1.6e-7, 2.3e-8, 1.57e-7, 2.5e-8, 2.1e-7, NaN, 1.4e-7, 5.7e-8, 6.7e-7, 5.6e-7, 1.25e-6, 2.4e-7, NaN, 7.0e-9, 2.4e-7, 1.3e-8, 3.8e-8, 7.0e-9])...)

    inner = Vector{Float64}(undef,length(els))
    outer = similar(inner)

    @inbounds for i = eachindex(els)
        inni = (H[i], L[i], LL[i], R[i], EH[i], EL[i])
        outi = (CI[i], CM[i], CV[i], CO[i], CK[i], CR[i])

        nin, nout = SolarChem.countnotnans(inni), SolarChem.countnotnans(outi)
        nin, nout = ifelse(iszero(nin), NaN, nin), ifelse(iszero(nout), NaN, nout)
        
        inner[i] = sum(ifelse(isnan(x), 0. , x) for x in inni ) / nin
        outer[i] = sum(ifelse(isnan(x), 0. , x) for x in outi ) / nout
    end
    inner = (; zip(els,inner)...)
    outer = (; zip(els, outer)...)
    
    (; z, els, inner, outer, H, L, LL, R, EH, EL, CI, CM, CV, CO, CK, CR )
end


