var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SolarChem","category":"page"},{"location":"#SolarChem","page":"Home","title":"SolarChem","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SolarChem.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SolarChem]","category":"page"},{"location":"#SolarChem.strelements","page":"Home","title":"SolarChem.strelements","text":"SolarChem.strelements\n\nA Tuple containing all elements in order of increasing Z (up to Z=96) as a String followed by a space. Derived from SolarChem.periodictable for use inside loadastromatdata. A constant within the scope of the SolarChem module. \n\n\n\n\n\n","category":"constant"},{"location":"#SolarChem.assigngroup-Tuple{String}","page":"Home","title":"SolarChem.assigngroup","text":"assigngroup(str)\n\nAssign all corresponding genetic groups to a String str containing meteorite group/type information. See innergroups and outergroups for groups.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.assigntype-Tuple{String}","page":"Home","title":"SolarChem.assigntype","text":"assigntype(str)\n\nAssign all corresponding genetic groups to a String `str` containing meteorite group/type information. See [`innergroups`](@ref) and [`outergroups`](@ref) for groups.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.bootstrapmean-Tuple{Int64, Vector, Vector, Vector}","page":"Home","title":"SolarChem.bootstrapmean","text":"bootstrapmean(n, x, σ, weights; rng)\n\nReturns a Vector of n means, each calculated from a random resampling of dataset x with (normally distributed) 1σ uncertainties σ, given weights (obtained from calcweights). If you desire unweighted resamplings provide ones(length(x)) for weights.\n\nOptionally provide a (pseudo)random number generator rng (default: Xoshiro256++).\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.bootstrapresample-Tuple{Int64, Vector, Vector, Vector}","page":"Home","title":"SolarChem.bootstrapresample","text":"bootstrapresample(n, x, σ, weights; rng)\n\nReturns a Vector of n random samples from dataset x with (normally distributed) 1σ uncertainties σ, given weights (obtained from calcweights). If you desire an unweighted resample provide ones(length(x)) for weights.\n\nOptionally provide a (pseudo)random number generator rng (default: Xoshiro256++).\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.calcweights-Union{Tuple{Vector}, Tuple{T}} where T<:Number","page":"Home","title":"SolarChem.calcweights","text":"calcweights(v ; weightings)\n\nCalculate weightings for a population v for a non-biased sampling of the population.  Optionally give weightings as a Dict of \"type\" => x to further suppress values of \"type\" by a factor of x.\n\ne.g.     julia> v = [\"a\", \"b\", \"a\"]     julia> calcweights(v)     3-element Vector{Float64}:      0.5      1.0      0.5\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.estimateuncertainty-Tuple{NamedTuple, Number}","page":"Home","title":"SolarChem.estimateuncertainty","text":"estimateuncertainty(d, unc; maxpctunc, minuncs)\n\nCalculate an assumed uncertainty unc (in %) for all analytes in NamedTuple d. Replaces any values exceeding the maximum percent uncertainty (maxpctunc) with unc. If there are > minuncs (30 by default) uncertainties corresponding to measurements of an analyte, it calculates unreported uncertainties as the mean relative uncertainty of all measurements (with %unc < maxpctunc). \n\nRequires that uncertainties are given as 1σ with keys :sX where X is the analyte name (e.g. :Na and :sNa).\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.innergroups-Tuple{}","page":"Home","title":"SolarChem.innergroups","text":"innergroups()\n\nReturn a Tuple containing all chondrite genetic groups associated with the inner solar system and used in SolarChem.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.metadata-Tuple{}","page":"Home","title":"SolarChem.metadata","text":"metadata = (:sample,:type,:group)\n\nReturn a Tuple of metadata names in the NamedTuple generated from Astromat data.  Still in development.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.outergroups-Tuple{}","page":"Home","title":"SolarChem.outergroups","text":"outergroups()\n\nReturn a Tuple containing all chondrite genetic groups associated with the outer solar system and used in SolarChem.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.periodictable-Tuple{}","page":"Home","title":"SolarChem.periodictable","text":"SolarChem.periodictable()\n\nReturn a Tuple containing all elements (as Symbols) in order of increasing Z, up to Z=96.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.pulltopic-Union{Tuple{Nt}, Tuple{NamedTuple, Symbol, Tuple{Vararg{String, Nt}}}} where Nt","page":"Home","title":"SolarChem.pulltopic","text":"pulltopic(data, name, topic[s]; exactmatch=true)\n\nGiven a NamedTuple of data, returns a NamedTuple with all the names of data and only including those rows within under name (::Symbol) that contain the provided topic(s) –- as a String or Tuple of Strings.\n\n\n\n\n\n","category":"method"},{"location":"#SolarChem.trimnans-Union{Tuple{Nai}, Tuple{Nkz}, Tuple{NamedTuple, Tuple{Vararg{Symbol, Nkz}}}} where {Nkz, Nai}","page":"Home","title":"SolarChem.trimnans","text":"trimnans(data, names; alsoinclude = SolarChem.metadata)\n\nGiven a NamedTuple of data, return only the values and uncertainties of all non-NaN instances of name –- a name (::Symbol) or Tuple of names from data. Also returns the the Vectors corresponding to the fields listed in alsoinclude, which is by definition those defined by SolarChem.metadata.\n\n\n\n\n\n","category":"method"}]
}
